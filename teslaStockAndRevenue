!pip install yfinance
!pip install bs4
!pip install nbformat

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import warnings
# Ignore all warnings
warnings.filterwarnings("ignore", category=FutureWarning)

def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021--06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

#Using the `Ticker` function enter the ticker symbol of the stock we want to extract data on to create a ticker object. The stock is Tesla and its ticker symbol is `TSLA`.
tesla=yf.Ticker("TSLA")

tesla_data=tesla.history(period="max")#the ticker object and the function `history` extract stock information
print (tesla_data) 

tesla_data.reset_index(inplace=True)
tesla_data.head()

# Use Webscraping to Extract Tesla Revenue Data
url="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data=requests.get(url)
soup=BeautifulSoup(html_data.content, "html.parser")
tables=soup.find_all("table")

for table in tables:
    if "Tesla Quarterly Revenue" in str(table):
        tb = table
        data=[]
        rows = tb.find_all("tr")
        for row in rows:
            columns = row.find_all("td")
            if len(columns) > 0:  # Check if the row contains columns
                date = columns[0].text.strip()
                revenue = columns[1].text.strip()
                data.append({"Date": date, "Revenue": revenue})

        break  # Exit the loop once the correct table is found
tesla_revenue = pd.DataFrame(data)


tesla_revenue["Revenue"] = tesla_revenue["Revenue"].str.replace(r'[,\$]', '', regex=True)
tesla_revenue.dropna(inplace=True) #remove an null or empty strings in the Revenue column.
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]

print(tesla_revenue.tail())#displays last 5 data

graph=make_graph(tesla_data, tesla_revenue, "Tesla")
graph

